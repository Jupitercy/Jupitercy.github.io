<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HTML学习笔记</title>
      <link href="/2022/08/07/HTML%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/08/07/HTML%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML学习笔记-持续更新中···"><a href="#HTML学习笔记-持续更新中···" class="headerlink" title="HTML学习笔记(持续更新中···)"></a>HTML学习笔记(持续更新中···)</h1><pre><code>HTML(Hypertext Makeup Language),超文本标记语言，是一种用于创建网页的标准标记语言。</code></pre><ul><li>标记语言、标记标签</li><li>HTML使用标记标签来描述网页</li><li>HTML文档包含了HTML标签及文本内容</li><li>HTML文档也叫做web页面</li></ul><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;    &lt;head&gt;        &lt;meta charset=&quot;utf-8&quot;&gt;        &lt;title&gt;Jupiter&#39;s note&lt;/title&gt;    &lt;/head&gt;    &lt;body&gt;        &lt;h1&gt;我的第一个标题&lt;/h1&gt;        &lt;p&gt;我的第一个段落。&lt;/p&gt;    &lt;/body&gt;&lt;/html&gt;</code></pre><ul><li><!DOCTYPE html><p>是一条标记语言，具体含义为 HTML5 标准网页声明，全称为 Document Type HyperText Mark-up Language。该声明位于文档中最前面的位置，处于<html>标签之前，支持 HTML5 标准的主流浏览器都认识这个声明，不区分大小写。</p></li><li> <html>是 HTML 页面的根元素</li><li> <head> 元素包含了文档的元（meta）数据，如 <pre><code> &lt;meta charset=&quot;utf-8&quot;&gt;</code></pre></li></ul><p>定义网页编码格式为 utf-8。</p><ul><li> <title>元素描述了文档的标题</li><li> <body> 元素包含了可见的页面内容</li><li> <h1> 元素定义一个大标题</li><li> <p> 元素定义一个段落</li></ul><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h3 id="文档命名"><a href="#文档命名" class="headerlink" title="文档命名"></a>文档命名</h3><ul><li>.html 超文本标记(Hypertext Markup)</li><li>.htm 超文本标记语言(Hypertext Markup Language)</li></ul><h3 id="HTML标签"><a href="#HTML标签" class="headerlink" title="HTML标签"></a>HTML标签</h3><p>HTML标记标签通常被称为HTML标签(HTML tag)。</p><ul><li>HTML 标签是由尖括号包围的关键词，比如 <html></li><li>成对出现，标签对中的第一个标签是开始标签，第二个标签是结束标签，也被称为开放标签和闭合标签。</li></ul><h3 id="HTML元素"><a href="#HTML元素" class="headerlink" title="HTML元素"></a>HTML元素</h3><p>与标签概念相同，但一个 HTML 元素包含了开始标签与结束标签。</p><h3 id="Web浏览器"><a href="#Web浏览器" class="headerlink" title="Web浏览器"></a>Web浏览器</h3><p>用于读取HTML文件，并将其作为网页显示。浏览器并不是直接显示的HTML标签，但可以使用标签来决定如何展现HTML页面的内容给用户。</p><h2 id="HTML基础"><a href="#HTML基础" class="headerlink" title="HTML基础"></a>HTML基础</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>通过<h1> - <h6> 标签来定义。</p><pre><code>&lt;h1&gt;这是标题1&lt;/h1&gt;&lt;h2&gt;这是标题2&lt;/h2&gt;&lt;h3&gt;这是标题3&lt;/h3&gt;</code></pre><h3 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h3><p>通过标签 <p> 来定义。</p><pre><code>&lt;p&gt;这是段落1。&lt;/p&gt;&lt;p&gt;这是段落2。&lt;/p&gt;</code></pre><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>通过标签 <a> 来定义，在href属性中指定链接的地址。</p><pre><code>&lt;a href=&quot;https://jupitercy.github.io/&quot;&gt;这是一个链接&lt;/a&gt;</code></pre><h3 id="图像"><a href="#图像" class="headerlink" title="图像"></a>图像</h3><p>通过标签 <img> 来定义，以属性形式规定图像名称和尺寸。</p><pre><code>&lt;img src=&quot;/images/logo.png&quot; width=&quot;258&quot; height=&quot;39&quot; /&gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> 前端 </category>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Next插入图片</title>
      <link href="/2022/08/04/Hexo-Next%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/"/>
      <url>/2022/08/04/Hexo-Next%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo图片无法加载问题"><a href="#Hexo图片无法加载问题" class="headerlink" title="Hexo图片无法加载问题"></a>Hexo图片无法加载问题</h1><pre><code>在第一篇博客中，想要插入一张图片。一番折腾后，终于在本地可以成功显示图片，但在部署到GitHub上之后还是无法加载。在网上搜了很多方法，最终也终于解决了问题。</code></pre><h2 id="图片插入步骤"><a href="#图片插入步骤" class="headerlink" title="图片插入步骤"></a>图片插入步骤</h2><h3 id="Step1"><a href="#Step1" class="headerlink" title="Step1"></a>Step1</h3><p>打开站点配置_config.yml文件，修改以下内容：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><p>开启资源文件夹功能，表示在新建博客’hexo new “title”’时，会在根目录下创建一个同名文件夹，我们把要插入的图片存放到这个文件夹里就好啦。</p><img src="/2022/08/04/Hexo-Next%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/%E6%A0%B9%E7%9B%AE%E5%BD%95%E7%A4%BA%E6%84%8F%E5%9B%BE.png" class="" title="根目录下文件示意图"><img src="/2022/08/04/Hexo-Next%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/%E5%AD%98%E5%9B%BE%E7%A4%BA%E6%84%8F%E5%9B%BE.png" class="" title="将图片存放在对应文件夹里"><h3 id="Step2"><a href="#Step2" class="headerlink" title="Step2"></a>Step2</h3><p>安装插件<strong>hexo-asset-image</strong>，作用是图片路径转换。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br></pre></td></tr></table></figure><h3 id="Step3"><a href="#Step3" class="headerlink" title="Step3"></a>Step3</h3><p><strong>敲黑板！！！接下来是重点！！</strong></p><p>安装完成后，我们需要修改插件的配置信息。打开/node_modules/hexo-asset-image/index.js，将文件内容替换为以下所示代码：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> cheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getPosition</span>(<span class="params">str, m, i</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> str.<span class="title function_">split</span>(m, i).<span class="title function_">join</span>(m).<span class="property">length</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> version = <span class="title class_">String</span>(hexo.<span class="property">version</span>).<span class="title function_">split</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">&#x27;after_post_render&#x27;</span>, <span class="keyword">function</span>(<span class="params">data</span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> config = hexo.<span class="property">config</span>;</span><br><span class="line">  <span class="keyword">if</span>(config.<span class="property">post_asset_folder</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> link = data.<span class="property">permalink</span>;</span><br><span class="line"><span class="keyword">if</span>(version.<span class="property">length</span> &gt; <span class="number">0</span> &amp;&amp; <span class="title class_">Number</span>(version[<span class="number">0</span>]) == <span class="number">3</span>)</span><br><span class="line">   <span class="keyword">var</span> beginPos = <span class="title function_">getPosition</span>(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   <span class="keyword">var</span> beginPos = <span class="title function_">getPosition</span>(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">3</span>) + <span class="number">1</span>;</span><br><span class="line"><span class="comment">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span></span><br><span class="line"><span class="keyword">var</span> endPos = link.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;/&#x27;</span>) + <span class="number">1</span>;</span><br><span class="line">    link = link.<span class="title function_">substring</span>(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> toprocess = [<span class="string">&#x27;excerpt&#x27;</span>, <span class="string">&#x27;more&#x27;</span>, <span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; toprocess.<span class="property">length</span>; i++)&#123;</span><br><span class="line">      <span class="keyword">var</span> key = toprocess[i];</span><br><span class="line"> </span><br><span class="line">      <span class="keyword">var</span> $ = cheerio.<span class="title function_">load</span>(data[key], &#123;</span><br><span class="line">        <span class="attr">ignoreWhitespace</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">xmlMode</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">lowerCaseTags</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">decodeEntities</span>: <span class="literal">false</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&#x27;img&#x27;</span>).<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">if</span> ($(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>))&#123;</span><br><span class="line"><span class="comment">// For windows style path, we replace &#x27;\&#x27; to &#x27;/&#x27;.</span></span><br><span class="line"><span class="keyword">var</span> src = $(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>).<span class="title function_">replace</span>(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="regexp">/http[s]*.*|\/\/.*/</span>.<span class="title function_">test</span>(src) &amp;&amp;</span><br><span class="line">   !<span class="regexp">/^\s*\//</span>.<span class="title function_">test</span>(src)) &#123;</span><br><span class="line">  <span class="comment">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span></span><br><span class="line">  <span class="comment">// In addition, to support multi-level local directory.</span></span><br><span class="line">  <span class="keyword">var</span> linkArray = link.<span class="title function_">split</span>(<span class="string">&#x27;/&#x27;</span>).<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">elem</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">var</span> srcArray = src.<span class="title function_">split</span>(<span class="string">&#x27;/&#x27;</span>).<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">elem</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span> &amp;&amp; elem != <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">if</span>(srcArray.<span class="property">length</span> &gt; <span class="number">1</span>)</span><br><span class="line">srcArray.<span class="title function_">shift</span>();</span><br><span class="line">  src = srcArray.<span class="title function_">join</span>(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">  $(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>, config.<span class="property">root</span> + link + src);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="property">info</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;update link as:--&gt;&quot;</span>+config.<span class="property">root</span> + link + src);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="property">info</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;no src attr, skipped...&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="property">info</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>($(<span class="variable language_">this</span>));</span><br><span class="line">&#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      data[key] = $.<span class="title function_">html</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Step4"><a href="#Step4" class="headerlink" title="Step4"></a>Step4</h3><p>准备工作做好了，接下来在对应的md文件中按照以下规则插入图片。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% asset_img 图名.png 图片描述 %&#125;</span><br></pre></td></tr></table></figure><h3 id="Step5"><a href="#Step5" class="headerlink" title="Step5"></a>Step5</h3><p>最后一步，还是那套clean+g+d的流程，就可以显示了。</p><p><em>Tips:</em><br><em>如果在Github上部署之后，发现页面没有发生变化，试试‘shift+F5’，说不定就能解决问题。记得一定要等一等，页面可能有延迟，加载比较慢</em></p><h2 id="一个小坑"><a href="#一个小坑" class="headerlink" title="一个小坑"></a>一个小坑</h2><p>在网上查的时候还发现一种方法，我一开始也是使用的这种markdown语法。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">![图片描述](/图名.<span class="property">png</span>)</span><br></pre></td></tr></table></figure><p>不过，看了很多相关教程，也没找到有效的能使图片在页面上显示的方法。最终发现似乎是由于版本问题（Hexo 2 v Hexo 3）导致的，感兴趣的uu们可以进一步探究。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> Hexo </category>
          
          <category> 常见问题 </category>
          
          <category> Next主题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Next </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/08/02/hello-world/"/>
      <url>/2022/08/02/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
